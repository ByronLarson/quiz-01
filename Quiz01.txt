def matVec(matrix,vector):
  '''
  Inputs:
    A- matrix with dimensions row-matrix x column-matrix
    B- matrix with dimensions row-vector x 1
  Output:
    C - matrix with dimensions row-matrix x 1
  Details:
    This is the matrix times vector multiplication algorithm.
    For each matrix row, each vector columns = 1, and con to 0. con is the placeholder matrix to add each repition. Then for each matrix     column, add matrix[i][k]*vector[k] to con. Then set container[i][1] = con.
    The result is a Matrix rows in the matrix by 1.
  '''

  rA = len(matrix)# find the number of rows in matrix A
  cA = len(matrix[0])# find the number of columns in matrix A
  rB = len(vector)# find the number of rows in vector B
  cB = len(vector[0])# find number of columns in vector B; should be 1
  if(vector):
    if(cB > 1) or type(vector) == str:
      return

  if(matrix):
    if(type(matrix) == str):
      return

  #initialize a container to be a matrix  with 0s for all entries.
  container = [[0]*1 for row in range(rA)]


  for i in range(rA):
    # iterate through rows of the matrix
    for j in range(cB):
      # iterate through columns of vector whish should be 1
      con= 0
      for k in range(cA):
        #iterate through columns of the matrix
        con +=  matrix[i][k]*vector[k][j]
        #use += to add con + calculated value to placeholder matrix
      container[i][j] = con #final matrix will be the number of rows by 1 column
  return container


testmatrix01 = [[12,7,3],
                [4,5,6],
                [7,8,9]]
testmatrix02 = [1,2,3]
testmatrix03 = 'this is a test'

testVector01 = [[5],
                [8],
                [1]]
testVector02 = [[12,7,3],
                [4 ,5,6],
                [7 ,8,9]]
testVector03 = True

# These are test cases for the function matVec. All but one of the tests should be commented out at a time so that we can see how each pair of inputs effects the output. 

print(matVec(testmatrix01,testVector01))
#print(matVec(testmatrix02,testVector02))
#print(matVec(testmatrix03,testVector03)) 
